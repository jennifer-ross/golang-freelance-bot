version: '3.8'

services:
    app:
        build:
            context:
                .
            dockerfile: Dockerfile
        env_file:
            - .env
        volumes:
            - .env:/opt/app/.env
        environment:
            - '${GO111MODULE:-on}'
            - '${CGO_ENABLED:-0}'
        networks:
            - app-network
        depends_on:
            - postgres
            - redis

    postgres:
        image: postgres:17.2-alpine
        ports:
            - '${POSTGRES_PORT:-5432}:5432'
        env_file:
            -   .env
        environment:
            - '${POSTGRES_USER:-postgres}'
            - '${POSTGRES_PASSWORD:-postgres}'
            - '${POSTGRES_DB:-golang_db}'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7.0.15-alpine
        ports:
            - '${REDIS_PORT:-6379}:6379'
        env_file:
            - .env
        networks:
            - app-network
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            timeout: 5s
            interval: 10s
            retries: 3

networks:
    app-network:
        driver: bridge

volumes:
    postgres_data:
        driver: local